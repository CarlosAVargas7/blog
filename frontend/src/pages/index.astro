---
export const prerender = false;

import "../styles/global.css";

import type { MarkdownInstance } from "astro";

interface Frontmatter {
  title: string;
  date: string;
  tags?: string[];
}

let posts: MarkdownInstance<Frontmatter>[] = await Astro.glob<Frontmatter>(
  "../content/blog/*.md"
);

// Ordenar por fecha descendente
posts = posts.sort(
  (a, b) =>
    new Date(b.frontmatter.date).getTime() -
    new Date(a.frontmatter.date).getTime()
);
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Blog</title>
  </head>

  <body style="background-color: #000000f2;">
    <h2
      class="blog"
      style="text-align: center; display: flex; justify-content: center; align-items: center; gap: 10px;"
    >
      Blog
    </h2>

    <!-- Texto "Última entrada" con estilo cohesivo -->
    <div class="content-block">
      <h2 style="text-align: center; color: white; margin-top: 20px;">
        Última entrada
        <span style="display: block; font-size: 1.2rem; margin-top: 5px;"
          >⬇</span
        >
      </h2>
    </div>

    <!-- Última entrada -->
    <nav
      class="last"
      style="position: center; text-align: left; box-shadow: 10px 10px 10px 10px #000000;
  max-width: 700px;
  min-width: 300px;
  margin: 30px auto;
  padding: 10px 10px;
  box-sizing: border-box;"
    >
      {
        posts.slice(0, 1).map((Post) => (
          <article style="font-family: 'SF Pro Text'; font-size: 14px;">
            <h1 style="font-size: 1rem; text-align: center;">
              {Post.frontmatter.title}
            </h1>
            <Post.Content />
            <div class="tags">
              <p>Tags:</p>
              {Post.frontmatter.tags?.map((tag) => (
                <span class="tag">{tag}</span>
              ))}
            </div>
          </article>
        ))
      }
    </nav>

    <!-- Botón "Otras entradas" con mismo ancho -->
    <div class="content-block" style="text-align: center; margin: 20px auto;">
      <h2 class="btn">Entradas recientes</h2>
    </div>

    <!--Otras entradas-->
    <section id="otras-entradas" class="content-block entries-grid">
      {
        posts.slice(1).map((Post) => (
          <div class="entry-card">
            <h3>{Post.frontmatter.title}</h3>
            <div class="tags">
              {Post.frontmatter.tags?.map((tag) => (
                <span class="tag">{tag}</span>
              ))}
            </div>
          </div>
        ))
      }
    </section>

    <!-- Botón "Otras entradas" con mismo ancho -->
    <div class="content-block" style="text-align: center; margin: 20px auto;">
      <a href="#otras-entradas" class="btn">Otras entradas</a>
    </div>

    <!-- Footer -->
    <footer class="footer">
      <p>© {new Date().getFullYear()} Blog — CarlosAVargas7</p>
      <a
        href="https://github.com/carlosavargas7"
        target="_blank"
        class="github-link"
        aria-label="GitHub"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 24 24"
          fill="currentColor"
        >
          <path
            d="M12 .5C5.73.5.5 5.73.5 12c0 5.08 3.29 9.39 7.86 10.91.58.11.79-.25.79-.56 0-.28-.01-1.02-.02-2-3.2.7-3.88-1.54-3.88-1.54-.53-1.34-1.3-1.7-1.3-1.7-1.06-.73.08-.72.08-.72 1.17.08 1.78 1.2 1.78 1.2 1.04 1.78 2.73 1.27 3.4.97.11-.75.41-1.27.75-1.56-2.55-.29-5.23-1.28-5.23-5.7 0-1.26.45-2.29 1.19-3.1-.12-.29-.52-1.46.11-3.05 0 0 .97-.31 3.18 1.18a11.1 11.1 0 0 1 5.8 0c2.21-1.49 3.18-1.18 3.18-1.18.63 1.59.23 2.76.11 3.05.74.81 1.19 1.84 1.19 3.1 0 4.43-2.69 5.41-5.25 5.69.42.36.8 1.07.8 2.16 0 1.56-.01 2.82-.01 3.2 0 .31.21.68.8.56A10.99 10.99 0 0 0 23.5 12C23.5 5.73 18.27.5 12 .5z"
          ></path>
        </svg>
      </a>
    </footer>
  </body>
</html>
